@model SistemaChequesNuevo.Models.SolicitudCheque

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="edit-add active">

    <div class="edit-form">

        <h2>Crear Solicitud de cheque</h2>

        <form asp-action="Edit" id="miFormulario">

            <div asp-validation-summary="ModelOnly"></div>

            <!-- NumeroSolicitud -->
            <div class="form-input">
                <span asp-validation-for="NumeroSolicitud" class="icon"></span>
                <input asp-for="NumeroSolicitud" class="" id="NumeroSolicitud" maxlength="5" min="5"/>
                <label asp-for="NumeroSolicitud" class="form-label">Numero de Solicitud</label>
            </div>

            <!-- Monto -->
            <div class="form-input">
                <span asp-validation-for="Monto"></span>
                <input asp-for="Monto" type="text" id="Monto" maxlength="10" />
                <label asp-for="Monto" class="form-label">Monto</label>
            </div>

            <!-- Fecha de Registro -->
            <div class="form-input">
                <span asp-validation-for="FechaRegistro" class="icon"></span>
                <input asp-for="FechaRegistro" class="form-control" />
                <label asp-for="FechaRegistro" class="form-label"> Fecha de registro</label>
            </div>

            <!-- Estado -->
            <div class="form-input">
                <span asp-validation-for="Estado" class=""></span>
                <select asp-for="Estado" class="form-select">
                    <option selected disabled>  Seleccione el estado del cheque</option>
                    <option value="Pendiente">Pendiente</option>
                    <option value="Anulado">Anulado</option>
                    <option value="Generado">Generado</option>
                </select>
                <label asp-for="Estado" class="form-label">Estado</label>
            </div>

            <!-- Cuenta Contable -->
            <div class="form-input">
                <span asp-validation-for="CuentaContable" class="icon"></span>
                <input asp-for="CuentaContable" class="" maxlength="12" min="10" />
                <label asp-for="CuentaContable" class="form-label">Cuenta Contable</label>
            </div>

            <!-- Cuenta de Banco -->
            <div class="form-input">
                <span asp-validation-for="CuentaDestino" class="icon"></span>
                <input asp-for="CuentaDestino" class="" id="CuentaProveedor" maxlength="12" min="10" />
                <label asp-for="CuentaDestino" class="control-label"></label>
            </div>

            <!-- Cuenta de Proveedor -->
            <div class="form-input">
                <span asp-validation-for="ProveedorId" class="icon"></span>
                <select asp-for="ProveedorId" class="form-select" asp-items="ViewBag.ProveedorId"></select>
                <label asp-for="ProveedorId" class="form-label"></label>
            </div>

            <button type="submit" value="Create" class="btn" onclick="generarYAsignarNumeroSolicitud()">Create</button>

            <div class="login-register">
                <a asp-action="Index" class="go-back">Back to List</a>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

        document.getElementById("miFormulario").addEventListener("submit", function (event) {
            event.preventDefault(); // Evita que el formulario se envíe de forma predeterminada

            // Muestra la alerta de SweetAlert
            Swal.fire({
                position: "top-end",
                icon: "success",
                title: "Your work has been saved successfully",
                showConfirmButton: false,
                timer: 1500
            }).then((result) => {
                // Cuando se cierre la alerta, envía el formulario
                if (result.dismiss === Swal.DismissReason.timer) {
                    document.getElementById("miFormulario").submit();
                }
            });
        });

    </script>
   }

<script>
    console.log('Hola');
    document.addEventListener("DOMContentLoaded", function () {
        const inputCuentaContable = document.getElementById("CuentaContable");

        inputCuentaContable.addEventListener('input', function (event) {
            const inputValue = event.target.value;
            return onlyNumbers(inputValue);
        });

        const inputMonto = document.getElementById("Monto");

        inputMonto.addEventListener('input', function (event) {
            const inputValue = event.target.value;
            return onlyNumbers(inputValue);
        });

        const inputCuentaProveedor = document.getElementById("CuentaProveedor");

        inputCuentaProveedor.addEventListener('input', function (event) {
            const inputValue = event.target.value;
            return onlyNumbers(inputValue);
        });

        function onlyNumbers(inputValue) {
            const lastChar = inputValue[inputValue.length - 1];

            // Permitir números y el signo "+"
            if (!isNaN(lastChar) || lastChar === "+") {
                // Permitir la entrada
            } else {
                // Bloquear la entrada eliminando el último carácter
                event.target.value = inputValue.substring(0, inputValue.length - 1);
            }
        }
    });
/*
    // Generar numero de cheque automatico
    function generarYAsignarNumeroSolicitud() {
        // Generar el número de solicitud automáticamente
        var nuevoNumeroSolicitud = generarNumeroSolicitud();

        // Establecer el número de solicitud en el campo correspondiente
        document.getElementById('NumeroSolicitud').value = nuevoNumeroSolicitud;
    }

    function generarNumeroSolicitud() {
        // Lógica para generar el número de solicitud, por ejemplo, puedes usar un número aleatorio o una secuencia única
        // Aquí un ejemplo simple usando un número aleatorio de 6 dígitos
        var numeroAleatorio = Math.floor(Math.random() * 900000) + 100000;
        return numeroAleatorio.toString();
    }*/

</script>
