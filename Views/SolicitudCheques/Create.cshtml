@model SistemaChequesNuevo.Models.SolicitudCheque

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="edit-add active">

    <div class="edit-form">

        <h2>Crear Solicitud de cheque</h2>

        <form asp-action="Create" id="formulario">

            <div asp-validation-summary="ModelOnly"></div>

            <!-- NumeroSolicitud -->
            <div class="form-input">
                <span asp-validation-for="NumeroSolicitud" class="icon"></span>
                <input asp-for="NumeroSolicitud" name="NumeroSolicitud" id="NumeroSolicitud" min="5" maxlength="5" />
                <label asp-for="NumeroSolicitud" class="form-label">Numero de Solicitud</label>
            </div>

            <!-- Monto -->
            <div class="form-input">
                <span asp-validation-for="Monto"></span>
                <input asp-for="Monto" type="text" id="Monto" maxlength="10" />
                <label asp-for="Monto" class="form-label">Monto</label>
            </div>

            <!-- Fecha de Registro -->
            <div class="form-input">
                <span asp-validation-for="FechaRegistro" class="icon"></span>
                <input asp-for="FechaRegistro" class="form-control" type="date"/>
                <label asp-for="FechaRegistro" class="form-label"> Fecha de registro </label>
            </div>

            <!-- Estado -->
            <div class="form-input">
                <span asp-validation-for="Estado" class=""></span>
                <select asp-for="Estado" class="form-select">
                    <option selected disabled>  Seleccione el estado del cheque</option>
                    <option value="Pendiente">Pendiente</option>
                    <option value="Anulado">Anulado</option>
                    <option value="Generado">Generado</option>
                </select>
                <label asp-for="Estado" class="form-label">Estado</label>
            </div>

            <!-- Cuenta Contable -->
            <div class="form-input">
                <span asp-validation-for="CuentaContable" class="icon"></span>
                <input asp-for="CuentaContable" class="" maxlength="12" min="10"/>
                <label asp-for="CuentaContable" class="form-label">Cuenta Contable</label>
            </div>

            <!-- Cuenta de Banco -->
            <div class="form-input">
                <span asp-validation-for="CuentaDestino" class="icon"></span>
                <input asp-for="CuentaDestino" class="" id="CuentaProveedor" maxlength="12" min="10" />
                <label asp-for="CuentaDestino" class="form-label"> Cuenta de Proveedor </label>
            </div>

            <!-- Cuenta de Proveedor -->
            <div class="form-input">
                <span asp-validation-for="ProveedorId" class="icon"></span>
                <select asp-for="ProveedorId" class="form-select" asp-items="ViewBag.ProveedorId"></select>
                <label asp-for="ProveedorId" class="form-label"> Proveedor </label>
            </div>

            <button type="submit" value="Create" class="btn" onclick="enviarFormulario()">Create</button>

            <div class="login-register">
                <a asp-action="Index" class="go-back">Back to List</a>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    console.log('Hola');
    document.addEventListener("DOMContentLoaded", function () {
        const inputCuentaContable = document.getElementById("CuentaContable");

        inputCuentaContable.addEventListener('input', function (event) {
            const inputValue = event.target.value;
            return onlyNumbers(inputValue);
        });

        const inputMonto = document.getElementById("Monto");

        inputMonto.addEventListener('input', function (event) {
            const inputValue = event.target.value;
            return onlyNumbers(inputValue);
        });

        const inputCuentaProveedor = document.getElementById("CuentaProveedor");

        inputCuentaProveedor.addEventListener('input', function (event) {
            const inputValue = event.target.value;
            return onlyNumbers(inputValue);
        });

        function onlyNumbers(inputValue) {
            const lastChar = inputValue[inputValue.length - 1];

            // Permitir números y el signo "+"
            if (!isNaN(lastChar) || lastChar === "+") {
                // Permitir la entrada
            } else {
                // Bloquear la entrada eliminando el último carácter
                event.target.value = inputValue.substring(0, inputValue.length - 1);
            }
        }
    });



</script>
